apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: slinkee-operator
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
    prometheus.io/port: '{{ .Values.slinkee.probes_api.port }}'
  name: slinkee-operator
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: slinkee-operator
  template:
    metadata:
      labels:
        app: slinkee-operator
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/cm.yaml") . | sha256sum }}
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '{{ .Values.slinkee.probes_api.port }}'
    spec:
      serviceAccountName: slinkee
      imagePullSecrets:
      - name: vcr
      containers:
      - image: "{{ .Values.slinkee.repository }}:{{ .Values.slinkee.tag }}"
        name: slinkee
        imagePullPolicy: "Always"
        command: [/app/slinkee]
        args: ["-config", "/app/etc/config.yaml"]
        resources:
          limits:
            memory: {{ .Values.slinkee.resources.limits.memory | quote }}
          requests:
            memory: {{ .Values.slinkee.resources.requests.memory | quote }}
        ports:
          - containerPort: {{ .Values.slinkee.probes_api.port }}
            name: probes
        livenessProbe:
          httpGet:
            path: /healthz
            port: probes
          failureThreshold: 2
          periodSeconds: 3
          initialDelaySeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: probes
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: slinkee-operator
          mountPath: /app/etc
      volumes:
      - name: slinkee-operator
        configMap:
          name: slinkee-operator